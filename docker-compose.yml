version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - ransomware-net
    volumes:
      - zookeeper-data:/var/lib/zookeeper

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    networks:
      - ransomware-net
    volumes:
      - kafka-data:/var/lib/kafka

  flink:
    image: apache/flink:1.16.0-scala_2.12
    container_name: flink
    environment:
      - FLINK_PROPERTIES=jobmanager.rpc.address=flink
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/jobmanager/overview || exit 1"]
      interval: 30s
      retries: 3
    networks:
      - ransomware-net
    command: ["jobmanager"]

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb
    environment:
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: admin123
      INFLUXDB_ORG: ransomware
    networks:
      - ransomware-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/ping"]
      interval: 30s
      retries: 5

  grafana:
    image: grafana/grafana:9.3.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    depends_on:
      - influxdb
    networks:
      - ransomware-net
    volumes:
      - grafana-data:/var/lib/grafana

  producer:
    image: python:3.11-slim
    container_name: producer
    build:
      context: ./producer
    working_dir: /app
    volumes:
      - ./producer:/app
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka
    networks:
      - ransomware-net
    command: ["python", "producer_API.py"]

  spark-master:
    image: bitnami/spark:3.4.0
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_UI_PORT=8080
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - ransomware-net
    volumes:
      - spark-master-data:/opt/bitnami/spark/data

  spark-worker:
    image: bitnami/spark:3.4.0
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
    depends_on:
      - spark-master
    networks:
      - ransomware-net
    volumes:
      - spark-worker-data:/opt/bitnami/spark/data

  ransomware-dashboard:
    build:
      context: ./Dashboard
    container_name: ransomware-dashboard
    ports:
      - "8050:8050"
    networks:
      - ransomware-net
    depends_on:
      - influxdb
    volumes:
      - ./Dashboard:/app
    environment:
      INFLUXDB_HOST: influxdb:8086
    command: ["python", "/app/app.py"]

networks:
  ransomware-net:
    driver: bridge

volumes:
  kafka-data:
  zookeeper-data:
  influxdb-data:
  grafana-data:
  spark-master-data:
  spark-worker-data:
